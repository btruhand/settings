export CODE_DIR=~/Code
export SETTINGS_DIR=$CODE_DIR/settings
export DOTFILES_DIR=$SETTINGS_DIR/dotfiles

if [ -f ~/.profile ]; then
	source ~/.profile
fi

if [ -f ~/.iterm2_shell_integration.`basename $SHELL` ]; then
	source ~/.iterm2_shell_integration.`basename $SHELL`
fi

if [ -f ~/.work_settings ]; then
	source ~/.work_settings
fi

export GITAWAREPROMPT=$CODE_DIR/git-aware-prompt
source "${GITAWAREPROMPT}/main.sh"
source <(npm completion)
export CLICOLOR=1
export PS1='\033]0;$(basename $(dirname "$PWD"))/$(basename "$PWD")\007\[\e[1;37m\][\t]\]\[\e[1;33m\]\u\[\e[1;32m\]\[$bldblu\]$git_branch \[$bldgrn\]$git_head_tag \[$txtred\]$git_dirty\[$txtrst\] @\[\e[1;39m\] \W\[\e[1;38m\]\n\$ > '
export LSCOLORS='GxhxCxExBxdxhxFxgxHxcx'
alias ls='ls -lGFh -color'

alias shpr='cat ~/.bash_profile'

find_replace () {
	find . -type f -name "$1" -exec perl -i -pe"s/$2/$3/g" {} +
}
git_checkout_branch () {
	git checkout `git branch | sed -n $1p`
}
git_tag () {
	git tag $1_`date +%Y%m%d%H%M%S` && (git describe --tag --always | xargs git push origin)
}
source_dotfile () {
	cp_dotfile $1
	source ~/.$1
}
cp_to_settings() {
	cp $2 $SETTINGS_DIR/$1
}
cp_from_settings() {
	cp $SETTINGS_DIR/$1 $2
}
cp_dotfile () {
	cp_from_settings dotfiles/$1 ~/.$1
}
cp_config () {
	cp_from_settings configurations/$1 ~/
}
edit_setfile () {
	vim $SETTINGS_DIR/$1
}
edit_dotfile () {
	vim $DOTFILES_DIR/$1
}
git_settings () {
	commit_msg="$1"
	ori_loc=$(pwd)
	cd $SETTINGS_DIR
	git add .
	git commit -m "$commit_msg"
	git pb
	cd $ori_loc
}
make_jsctags () {
	find . -type f -iregex ".*\.js$" -not -path "*/node_modules/*" -exec jsctags {} -f \; | sed '/^$/d' | sort > tags
}
uml_diagram () {
	java -jar ~/Code/tools/plantuml.jar -verbose $1
}
partial_rename_files () {
	local search="$1"
	local from=$2
	local to=$3
	local mode=$4
	if [[ ! -z $mode && $mode != "global" && $mode != "local" ]]; then
		echo "Mode must be global or local"
		return 1
	fi
	for file in $search; do
		if [[ ${mode:-global} = "global" ]]; then
			mv $file ${file//$from/$to}
		else
			mv $file ${file/$from/$to}
		fi
	done
}

alias fr=find_replace
alias gitcob=git_checkout_branch
alias tagtest='git_tag test_Btara'
alias tagstg='git_tag release_stg'
alias tagdev='git_tag release_stg'
alias tagrelease='git_tag release'
alias so='cp_dotfile bash_profile && source ~/.bash_profile'
alias se='edit_dotfile bash_profile'
alias sete=edit_setfile
alias dote=edit_dotfile
alias dotcp=cp_dotfile
alias cptoset=cp_to_settings
alias cpfromset=cp_from_settings
alias gitset=git_settings
alias dotso=source_dotfile
alias mkjstags=make_jsctags
alias uml=uml_diagram
alias prename=partial_rename_files
alias ll='ls -a'
alias phpctags='php ~/Code/tools/phpctags'
alias cpconf=cp_config
alias insecurechrome='/Applications/Google\ Chrome.app/Contents/MacOS/Google\ Chrome --ignore-certificate-errors'

# some PHP/Apache things
alias apache='apachectl'

# NPM setup
NPM_PACKAGES="${HOME}/.npm-packages"

# n setup
export N_PREFIX=$NPM_PACKAGES

export PATH="$(brew --prefix homebrew/core/php@5.6)/bin:$NPM_PACKAGES/bin:$HOME/.composer/vendor/bin:/usr/local/sbin:/usr/local/Cellar:$PATH"
export GRAPHVIZ_DOT="/usr/local/bin/dot"

LC_ALL=en_us.UTF-8
export LANG="$LC_ALL"

source ~/Code/tools/git-completion.bash

eval "$(rbenv init -)"
